name: Extract Cache
description: "Extracts the cached data from the docker build(x|kit) process"
inputs:
  cache-source:
    default: cache
    description: "Where the cache is stored in the calling workspace. Default: `cache`"
  cache-target:
    default: /root/.cache/go-build
    description: "Where the cache is stored in the docker container. Default: `/root/.cache/go-build`"
  scratch-dir:
    default: scratch
    description: "Where the action is stores some temporary files for its processing. Default: `scratch`"
runs:
  using: composite
  steps:
    - name: Prepare Timestamp for Layer Cache Busting
      shell: bash
      run: |
        date --iso=ns > ${{ inputs.scratch-dir }}/buildstamp
    - name: Prepare Dancefile to Access Caches
      shell: bash
      run: |
        echo "FROM alpine:3.17" > ${{ inputs.scratch-dir }}/Dancefile.extract
        echo "COPY buildstamp buildstamp" >> ${{ inputs.scratch-dir }}/Dancefile.extract
        echo "RUN --mount=type=cache,target=${{ inputs.cache-target }} \\" >> ${{ inputs.scratch-dir }}/Dancefile.extract
        echo "  mkdir -p /var/dance-cache/ && cp -R ${{ inputs.cache-source }}/* /var/dance-cache/ || true" >> ${{ inputs.scratch-dir }}/Dancefile.extract
        cat ${{ inputs.scratch-dir }}/Dancefile.extract
    - name: extract Data into Docker Cache
      shell: bash
      run: |
        docker buildx build -f ${{ inputs.scratch-dir }}/Dancefile.extract --tag dance:extract ${{ inputs.scratch-dir }}
